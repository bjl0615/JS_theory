/*
    변수 구분
        - 로컬(지역) 변수, 글로벌(전역) 변수
        - 변수를 구분하는 이유는?
            - 기능과 목적이 다르기 때문
        - 글로벌 변수와 기능, 목적
            - 다른 js 파일에서 변숫값 공유
            - 파일에서 공통 변수 개념으로 사용
            - 의도는 좋으나 처리 속도가 떠러짐
        - 로컬 변수의 기능, 목적
            - 빠르게 식별자를 해결하기 위해 가꺼운 스코프의 변수를 사용하려는 것
        - var 키워드 문제
    
    글로벌 변수 오해
        - 글로벌 변수는
            - 글로벌 오브젝트의 로컬 변수
            - var value = 100처럼
            - var 키워드 사용이 정상
        - var 키워드를 작성하지 않으면
            - 글러벌 변수로 간주하는데
            - 이것이 문제
*/
// "use strice";
value = 100;
function point(){
    value= 300;
    log("함수", value);
};
point();

// 1. var 키워드를 사용하지 않고 value를 글로벌 변수로 선언하고 100할당
// 2. point() 함수 안에서 value 변수에 300할당 value 변수가 로컬 변수가 아니므로 글로벌 오브젝트의 value 변수에 300 할당
// 3. 함수 안에서 글로벌 변수에 값을 설정하는 것은 좋은 모습이 아니다.
// 4. 로컬 변수와 글로벌 변수를 구분한 목적을 생각해야 한다.

/*
        - log()는 console.log()의 약칭
            - log() 실행 결과를 [실행 결과]에 표시

    use strict 사용
        - 함수 안에서
            - var 키워드를 사용하지 않으면 에러 발생
*/
// "use strice";
function point(){
    try{
        value = 300;
    } catch(e){
        log("글로벌 변수 사용 불가");
    };
};
point();
/*
        - ES6+
            - "use strict"가 디폴트 생성
            - 전체는 아님
*/